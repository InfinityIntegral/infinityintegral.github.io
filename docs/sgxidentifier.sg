#c SGXIdentifier
SGEXTN implementation of global unique identifier
#ic SGEXTN/primitives/sgxidentifier.h
#d SGXIdentifier is a global unique identifier consisting of 4 unsigned integers with 32 bits each. This provides 128 bits of precision, which ensures that collisions are essentially impossible. To prevent collisions just in case they happen, SGXIdentifier also provides a builtin registration system which can be used to track which identifiers already exist. SGXIdentifier is designed to replace QUuid entirely and is not compatible with QUuid.
#sp QSet<SGXIdentifier> $identifiersList
This property defines the set of all registered identifiers. You may freely read from it or iterate through it using a QSet<SGXIdentifier>::const_iterator but you should not modify it. To check if an identifier exists, use SGXIdentifier::exists(). To add and remove identifiers from the set, use SGXIdentifier::registerIdentifier() and SGXIdentifier::unregisterIdentifier() respectively.
#sp const SGXIdentifier $nullIdentifier
This property defines the null identifier, which is an identifier with all its bits set to false. This can be used for initialisation purposes.
#f $SGXIdentifier()
This is the default constructor of SGXIdentifier. You should not use it and it does nothing. The only reason why it exists is so that you can write = {} to initialise SGXIdentifier member properties in class definition headers and that stops clang-tidy from complaining.
#f $SGXIdentifier(bool ifValid)
This is the constructor to generate a new random SGXIdentifier. If ifValid is set to true, the generated constructor is guaranteed to have not been registered.
#f $SGXIdentifier(const QString& s, bool ifValid, int* errCode)
This constructor generates a SGXIdentifier from its string representation passed in by s. The variable errCode is passed in by pointer so that it may be modified to give information about the generated identifier. If ifValid is set to true, the constructor checks if the identifier has already been registered and sets errCode to 1 if the identifier has already been registered. If the string s is not a valid representation of an identifier or if it represents the null identifier, errCode is set to 2. Otherwise, errCode is set to 0. If nullptr is passed as errCode, no error checking is done.
#f [[nodiscard]] int $registerIdentifier() const
This function registers this SGXIdentifier. If it is already registered, the function returns 1. Otherwise, it registers the identifier and returns 0.
#f [[nodiscard]] int $unregisterIdentifier() const
This function unregisters (undo registration) this SGXIdentifier. If it was never registered, the function returns 1. Otherwise, it registers the identifier and returns 0.
#f [[nodiscard]] bool $exists() const
This function checks if this identifier has already been registered. It returns true if the identifier is already registered and false otherwise.
#f [[nodiscard]] QString $getStringForPrinting() const
This function generates the string representation of this SGXIdentifier. The string identifier can be used for display to the user. For writing to a file, you are strongly encouraged to use a binary file format and use SGXFile::writeGUID(SGXIdentifier) to write the identifier.

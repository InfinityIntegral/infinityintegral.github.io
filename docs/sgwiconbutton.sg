#c SGWIconButton
SGWidget interactive button displaying an icon
#ic SGEXTN/widgets/instantiable/sgwiconbutton.h
#if SGWButton
#d SGWIconButton is a subclass of SGWButton that provides an interactive button which displays an icon. Since input events need to be intercepted to trigger the attached callback function, SGWIconButton blocks user input from reaching SGWidgets under it. An icon is a typically Unicode private use range character defined in the font AppIcons.sg (see your SGEXTN/userDefinedClasses/sgucentralmanagement.cpp file for more information) that can be displayed in your application. The glyph of an icon must not exceed 1 em in size. The icon displayed on the SGWIconButton should provide the user with information about what the button does.
#dt <div id="-w"></div>_w Distance
The position and size of all SGWidgets are calculated using a <a class="link" href="#-w">_w</a> distance.$A _w distance is made of 2 coordinates, coordinate 1 and coordinate 0, and it is denoted using _w(c1, c0). This is equal to c1 * parent_size + c0 * size_unit pixels, where parent_size is the size of the parent SGWidget and size_unit is 1/24 of the screen width or screen height, whichever is longer.
#dt <div id="-c"></div> Theme Colours
SGWidgets follow a set of 9 chosen <a class="link" href="#-c">theme colours</a>. Each of these 9 colours have a index number between 0 and 8 which can be used to refer to them. If you want a SGWidget to have a colour that is not a theme colour, you must set it using a <a class="link" href="/classinfo/sgxcolourrgba">SGXColourRGBA</a>. Setting a non theme colour switches the widget to non theme colour mode and ignores previously set theme colours. Setting a theme colour switches the widget to theme colour mode and ignores all previously set non theme colours.
#f $SGWIconButton(SGWWidget* parent, QChar s, void (*attachedFunction)(SGWButton*), float x1, float x0, float y1, float y0, float w1, float w0)
This constructor for SGWIconButton creates a SGWIconButton and places it onto the screen.$parent: pointer to parent SGWidget$s: icon to be displayed, typically a character in the Unicode private use range$attachedFunction: callback function activated when the user clicks the button, a callback function attached to a button must return void and take as argument a pointer to a SGWButton, which indicates the button that was pressed$x1: 1 coordinate of x coordinate (which is a <a class="link" href="#-w">_w</a> distance) of position$x0: 0 coordinate of x coordinate (which is a <a class="link" href="#-w">_w</a> distance) of position$y1: 1 coordinate of y coordinate (which is a <a class="link" href="#-w">_w</a> distance) of position$y0: 0 coordinate of y coordinate (which is a <a class="link" href="#-w">_w</a> distance) of position$w1: 1 coordinate of width (which is a <a class="link" href="#-w">_w</a> distance)$w0: 0 coordinate of width (which is a <a class="link" href="#-w">_w</a> distance)
#f [[nodiscard]] QChar $getChar() const
This function gets the icon currently being displayed by this SGWIconButton. The icon should be a single character, typically in the Unicode private use range.
#f void $setChar(QChar c)
This function sets the icon currently being displayed by this SGWIconButton. The icon should be a single character, typically in the Unicode private use range.
